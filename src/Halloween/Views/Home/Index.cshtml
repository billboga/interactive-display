@inject Microsoft.Framework.OptionsModel.IOptions<Halloween.Models.AppSettings> AppSettings

@{
    var displayHeight = string.IsNullOrEmpty(AppSettings.Options.DisplayHeight)
        ? "100vh"
        : AppSettings.Options.DisplayHeight;

    var displayWidth = string.IsNullOrEmpty(AppSettings.Options.DisplayWidth)
        ? "100vw"
        : AppSettings.Options.DisplayWidth;
}

@section styles {
    <style>
        body {
            margin: 0;
            padding: 0;
            overflow: hidden;
        }

        iframe {
            border-style: none;
            height: @displayHeight;
            left:0;
            position:absolute;
            top:0;
            width: @displayWidth;
        }

        iframe.portrait {
            height: 100vw;
            left: 0px;
            position: relative;
            top: 50%;
            transform: rotate(-90deg) translateX(-50vh) translateY(-50vh);
            transform-origin: top;
            width: 100vh;
        }
    </style>
}

<iframe id="display" class="@(AppSettings.Options.PortraitMode == true ? "portrait" : "")" data-src="/displays"></iframe>

@section scripts {
    <script>
        $(function() {
            var display = $('#display');

            var primaryInput = false;
            var secondaryInput = false;

            pinHub.client.inputPinStateChange = function(index, state) {
                if (index === 0) {
                    primaryInput = state;
                }
                else if (index === 1) {
                    secondaryInput = state;
                }

                if (index === 0 && state === true && secondaryInput === false) {
                    display.attr('src', null);
                    display.attr('src', display.data('src'));
                }
                else if ((index === 0 && state === false && secondaryInput === false) || (index === 1 && state === false && primaryInput === false)) {
                    display.attr('src', null);

                    for (var i = 0; i < 4; i++) {
                        pinHub.server.setOutputPinState(i, false);
                    }
                }
            };
        });
    </script>
}
